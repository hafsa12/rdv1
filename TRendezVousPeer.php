<?php



/**
 * Skeleton subclass for performing query and update operations on the 'T_RENDEZ_VOUS' table.
 *
 *
 *
 * This class was autogenerated by Propel 1.7.0-dev on:
 *
 * Wed Apr  3 16:50:12 2013
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    propel.generator.RDV
 */
class TRendezVousPeer extends BaseTRendezVousPeer
{


    public function getTokenByRDV($idRDV)
    {

        $rdv = TRendezVousPeer::retrieveByPK($idRDV);
        if ($rdv) {
            $code=$rdv->getCodeRdv();// ."#". $rdv->getIdCitoyen() ."#". $rdv->getIdAgentRessource();
            return $code;
        }
    }
    
	public function getJoursRdv(/*$site=null,*/ $idRessource=null, $dateRdv=null, $idPrestation=null, $con=null) {

		$jourRdv = array();

		$sql =  " SELECT DATE_FORMAT( DATE_RDV,  '%Y-%m-%d' ) as dateRdv, DATE_FORMAT( DATE_RDV,  '%H:%i:%s' ) as dateTimeRdv
				, MODE_PRISE_RDV, ID_AGENT_RESSOURCE 
				FROM  `T_RENDEZ_VOUS` 
				WHERE ETAT_RDV NOT IN ('".Atexo_Config::getParameter("ETAT_ANNULE")."', '".Atexo_Config::getParameter("ETAT_ANNULE_ETAB")."') ";

		if($idRessource) {
			$sql .= " AND  `ID_AGENT_RESSOURCE` in (".$idRessource.")";
		}
		if($idPrestation) {
			$sql .= " AND  `ID_PRESTATION` =  '".$idPrestation."'";
		}
		/*else {
			//$sql .= " AND  `ID_PRESTATION` =  '".$idPrestation."'";
			$sql .= " AND  `ID_AGENT_RESSOURCE` in (SELECT ID_AGENT FROM T_AGENDA WHERE ID_PRESTATION='".$idPrestation."')";
		}*/
		if($dateRdv!=null) {
			$sql .= " AND DATE_FORMAT( DATE_RDV,  '%Y-%m-%d' ) =  '".$dateRdv."'";
		}
		/*if($site) {
			$sql .= " AND (MODE_PRISE_RDV =  '".Atexo_Config::getParameter("MODE_AGENT_TELEOPERATEUR_SURPLACE").
			"' OR MODE_PRISE_RDV =  '".Atexo_Config::getParameter("MODE_AGENT_TELEOPERATEUR_TELEPHONE")."')";
			}
			else {
			$sql .= " AND MODE_PRISE_RDV =  '".Atexo_Config::getParameter("MODE_AGENT_INTERNET")."'";
			}*/
		$sql .= "  AND DATE_RDV >= CURDATE( ) ORDER BY DATE_RDV";
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null)
		{
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();

		$datesRdv = $stmt->fetchAll ();

		foreach($datesRdv as $date) {
			$jourRdv[$date["dateRdv"]][]=$date["dateTimeRdv"]."_".$date["MODE_PRISE_RDV"]."_".$date["ID_AGENT_RESSOURCE"];
		}
		$logger->debug($jourRdv);
		return $jourRdv;
	}

	public function getRdvByCriteres(Atexo_RendezVous_CriteriaVo $criteriaVo, $count=false, $con=null) {
		if($count) {
			$sql =  " SELECT COUNT(DISTINCT(RDV.ID_RENDEZ_VOUS)) AS NBRE_ELMNTS";
		}
		else {
			$sql = " SELECT DISTINCT(RDV.ID_RENDEZ_VOUS),DATE_FORMAT(RDV.DATE_RDV,'%d/%m/%Y') AS DATE_DEB_RDV,DATE_FORMAT(RDV.DATE_RDV,'%H:%i') AS TIME_DEB_RDV, ETAT_RDV, CODE_RDV, MODE_PRISE_RDV, CHAMP_SUPP_PRESTA, ".
				" DATE_FORMAT(RDV.DATE_FIN_RDV,'%d/%m/%Y') AS DATE_FIN_RDV,DATE_FORMAT(RDV.DATE_FIN_RDV,'%H:%i') AS TIME_FIN_RDV, RDV.ID_PRESTATION, RDV.MOTIF_ANNULATION, ".
				" DATE_FORMAT(RDV.DATE_RDV,'%d/%m/%Y') AS DATE_DEB,DATE_FORMAT(RDV.DATE_RDV,'%H') AS HEURE_RDV, DATE_FORMAT(RDV.DATE_CREATION,'%d/%m/%Y %H:%i') AS DATE_CREATION_FR,".
				" CI.RAISON_SOCIAL, CI.NOM, CI.PRENOM, DATE_FORMAT(CI.DATE_NAISSANCE,'%d/%m/%Y') AS DATE_NAISSANCE, CI.IDENTIFIANT, CI.MAIL, CI.TELEPHONE, CI.FAX, CI.TEXT_1, CI.TEXT_2, CI.TEXT_3, TTL1.LIBELLE AS NOM_UTILISATEUR, TTL2.LIBELLE AS PRENOM_UTILISATEUR,".
				" TTL3.LIBELLE AS DENOMINATION_ETABLISSEMENT_ATTACHE, TTL4.LIBELLE AS DENOMINATION_ORGANISATION_ATTACHE, ORG.ID_ORGANISATION AS ID_ORGANISATION, TTL5.LIBELLE AS TYPE_PRESTATION, TTL6.LIBELLE AS PRESTATION, ID_AGENT_RESSOURCE, ".
				" TTL9.LIBELLE AS REF_PRESTATION, CONCAT(TTL5.LIBELLE, ' - ', TTL6.LIBELLE) AS PRESTATIONS_ASSOCIES, TTL7.LIBELLE AS NOM_ACCUEIL, TTL8.LIBELLE AS PRENOM_ACCUEIL, ID_AGENT_ANNULATION, DATE_FORMAT(RDV.DATE_ANNULATION,'%d/%m/%Y') AS DATE_ANNULATION_FR, TTL10.LIBELLE AS NOM_AGENT_ANNULATION, TTL11.LIBELLE AS PRENOM_AGENT_ANNULATION ,VISIOCONFERENCE,COUNT(T_BLOB_RDV.ID_RENDEZ_VOUS) AS NUMBER_PJ";
		}
		$sql .= " FROM T_CITOYEN CI, T_AGENT AG, T_TRADUCTION_LIBELLE TTL1, T_TRADUCTION_LIBELLE TTL2, T_TRADUCTION_LIBELLE TTL3, T_TRADUCTION_LIBELLE TTL4";
		$sql .= " , T_ETABLISSEMENT ET, T_ORGANISATION ORG,T_RENDEZ_VOUS RDV";
		$sql .=	" LEFT JOIN T_AGENT AG1 ON (AG1.ID_AGENT = RDV.ID_AGENT_ACCUEIL) ";
		$sql .=	" LEFT JOIN T_AGENT AG2 ON (AG2.ID_AGENT = RDV.ID_AGENT_ANNULATION) ";
		$sql .=	" LEFT JOIN T_TRADUCTION_LIBELLE TTL7 ON (TTL7.ID_TRADUCTION=AG1.CODE_NOM_UTILISATEUR ";
		$sql .=	" AND TTL7.LANG='".$criteriaVo->getLang()."')";
		$sql .= " LEFT JOIN T_BLOB_RDV ON (T_BLOB_RDV.ID_RENDEZ_VOUS = RDV.ID_RENDEZ_VOUS) ";
		$sql .=	" LEFT JOIN T_TRADUCTION_LIBELLE TTL8 ON (TTL8.ID_TRADUCTION=AG1.CODE_PRENOM_UTILISATEUR ";
		$sql .=	" AND TTL8.LANG='".$criteriaVo->getLang()."')".
                " LEFT JOIN T_TRADUCTION_LIBELLE TTL10 ON (TTL10.ID_TRADUCTION = AG2.CODE_NOM_UTILISATEUR ".
                " AND TTL10.LANG='".$criteriaVo->getLang()."')".
                " LEFT JOIN T_TRADUCTION_LIBELLE TTL11 ON (TTL11.ID_TRADUCTION = AG2.CODE_PRENOM_UTILISATEUR ".
                " AND TTL11.LANG='".$criteriaVo->getLang()."')".
		        ", T_PRESTATION PR LEFT JOIN T_REF_PRESTATION ON (T_REF_PRESTATION.ID_REF_PRESTATION=PR.ID_REF_PRESTATION) ";
		$sql .=	" LEFT JOIN T_TRADUCTION_LIBELLE TTL9 ON (TTL9.ID_TRADUCTION=T_REF_PRESTATION.CODE_LIBELLE ".
				" AND TTL9.LANG='".$criteriaVo->getLang()."') ".
				" LEFT JOIN T_TYPE_PRESTATION TPR ON ( TPR.ID_TYPE_PRESTATION = PR.ID_TYPE_PRESTATION ) ".
				" LEFT JOIN T_REF_TYPE_PRESTATION TRTPR ON TPR.ID_REF_TYPE_PRESTATION = TRTPR.ID_REF_TYPE_PRESTATION ".
				" LEFT JOIN T_TRADUCTION_LIBELLE TTL5 ON (TTL5.ID_TRADUCTION = TRTPR.CODE_LIBELLE ".
				" AND TTL5.LANG='".$criteriaVo->getLang()."') ".
				" LEFT JOIN T_TRADUCTION_LIBELLE TTL6 ON (TTL6.ID_TRADUCTION=PR.CODE_LIBELLE_PRESTATION ".
				" AND TTL6.LANG='".$criteriaVo->getLang()."') ";
		if($criteriaVo->getIdAgent()) {
			$sql .= " ,T_AGENT_PRESTATION AP";
		}
		$sql .= " WHERE TTL1.ID_TRADUCTION=AG.CODE_NOM_UTILISATEUR AND TTL2.ID_TRADUCTION=AG.CODE_PRENOM_UTILISATEUR ".

				" AND TTL3.ID_TRADUCTION=ET.CODE_DENOMINATION_ETABLISSEMENT AND TTL4.ID_TRADUCTION=ORG.CODE_DENOMINATION_ORGANISATION ".
				" AND TTL1.LANG='".$criteriaVo->getLang()."' AND TTL2.LANG='".$criteriaVo->getLang()."'".
				" AND TTL3.LANG='".$criteriaVo->getLang()."' AND TTL4.LANG='".$criteriaVo->getLang()."' ";
		$sql .= " AND RDV.ID_AGENT_RESSOURCE=AG.ID_AGENT AND CI.ID_CITOYEN=RDV.ID_CITOYEN AND RDV.ID_PRESTATION=PR.ID_PRESTATION";
		$sql .= " AND TPR.ID_ETABLISSEMENT=ET.ID_ETABLISSEMENT AND ET.ID_ORGANISATION=ORG.ID_ORGANISATION";
		if($criteriaVo->getMotCle()!=null) {
			$sql .= " AND (TTL1.LIBELLE like '%".addslashes($criteriaVo->getMotCle())."%' OR TTL2.LIBELLE like '%".addslashes($criteriaVo->getMotCle())."%' ";
			$sql .= " OR TTL3.LIBELLE like '%".addslashes($criteriaVo->getMotCle())."%' OR TTL4.LIBELLE like '%".addslashes($criteriaVo->getMotCle())."%'";
			$sql .= " OR TTL5.LIBELLE like '%".addslashes($criteriaVo->getMotCle())."%' OR TTL6.LIBELLE like '%".addslashes($criteriaVo->getMotCle())."%'";
			$sql .= " OR CI.IDENTIFIANT like '%".addslashes($criteriaVo->getMotCle())."%'";
			$sql .= " OR CI.NOM like '%".addslashes($criteriaVo->getMotCle())."%' OR CI.PRENOM like '%".addslashes($criteriaVo->getMotCle())."%')";
		}
		$sql .= self::addCritere($criteriaVo);
		if(!$count) {
			$sql.= " group by RDV.ID_RENDEZ_VOUS";
			if ($criteriaVo->getSortByElement()) {
				$sql.= " order by ".$criteriaVo->getSortByElement()." ".$criteriaVo->getSensOrderBy();
			}
			else {
				$sql.= " order by RDV.DATE_RDV ASC";
			}
		}
		if ($criteriaVo->getLimit()) {
			$sql .= " limit " . $criteriaVo->getOffset() . "," . $criteriaVo->getLimit();
		}
        //echo $sql;exit;
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null) {
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();
		$results = $stmt->fetchAll();

		if($count) {
			return $results[0]["NBRE_ELMNTS"];
		}
		return self::getResult($results,$criteriaVo);
	}

	/**
	 * @param $criteriaVo,$results
	 * Retourner le resultat de la requete
	 */
	public function getResult($results,$criteriaVo) {
		$listeRdv = array();
		$tParamForms=array();
		$lang = Atexo_User_CurrentUser::readFromSession("lang");
		$tRdv = new TRendezVousQuery();
		foreach($results as $result) {
			$rdv = array();
			$rdv["ID_RENDEZ_VOUS"] = $result["ID_RENDEZ_VOUS"];
			$rdv["NOM_RESSOURCE"] = $result["NOM_UTILISATEUR"];
			$rdv["PRENOM_RESSOURCE"] = $result["PRENOM_UTILISATEUR"];
			$rdv["NOM"] = $result["NOM"];
			$rdv["PRENOM"] = $result["PRENOM"];
			$rdv["DATE_NAISSANCE"] = $result["DATE_NAISSANCE"];
			$rdv["RAISON_SOCIAL"] = $result["RAISON_SOCIAL"];
			$rdv["MAIL"] = $result["MAIL"];
			$rdv["TELEPHONE"] = $result["TELEPHONE"];
			$rdv["FAX"] = $result["FAX"];
			$rdv["IDENTIFIANT"] = $result["IDENTIFIANT"];
			$rdv["VISIOCONFERENCE"] = $result["VISIOCONFERENCE"];
			$rdv["ID_PRESTATION"] = $result["ID_PRESTATION"];
			$rdv["ID_AGENT_RESSOURCE"] = $result["ID_AGENT_RESSOURCE"];
			$rdv["ID_ORGANISATION"] = $result["ID_ORGANISATION"];
			if($result["TEXT_1"].$result["TEXT_2"].$result["TEXT_3"]!="") {
				if(!isset($tParamForms[$result["ID_PRESTATION"]])) {
					$tParametreFormQuery = new TParametreFormQuery();
					$tParamForms[$result["ID_PRESTATION"]] = $tParametreFormQuery->getParametreFormByIdPrestation($result["ID_PRESTATION"]);
				}
				$text1 = $tParamForms[$result["ID_PRESTATION"]]->getLibelleTextTraduit(1,$lang);
				$rdv["TEXT1"] = ($result["TEXT_1"]!="" && $text1!="")?$text1." : ".$result["TEXT_1"]:"";
				$text2 = $tParamForms[$result["ID_PRESTATION"]]->getLibelleTextTraduit(2,$lang);
				$rdv["TEXT2"] = ($result["TEXT_2"]!="" && $text2!="")?$text2." : ".$result["TEXT_2"]:"";
				$text3 = $tParamForms[$result["ID_PRESTATION"]]->getLibelleTextTraduit(3,$lang);
				$rdv["TEXT3"] = ($result["TEXT_3"]!="" && $text3!="")?$text3." : ".$result["TEXT_3"]:"";
			}
			$rdv["ID_ETAT_RDV"] = $result["ETAT_RDV"];
			$rdv["ETAT_RDV"] = self::getEtatRdv($result["ETAT_RDV"]);
			$rdv["GRISE"] = in_array($result["ETAT_RDV"], array(Atexo_Config::getParameter('ETAT_NON_HONORE'), Atexo_Config::getParameter('ETAT_NON_HONORE_ETAB'), Atexo_Config::getParameter('ETAT_ANNULE'), Atexo_Config::getParameter('ETAT_ANNULE_ETAB')));
			$rdv["ANNULE_PAR"] = self::getAnnulePar($result);
            $rdv["DATE_ANNULATION_FR"] = $result["DATE_ANNULATION_FR"] ? $result["DATE_ANNULATION_FR"] : Prado::localize('TRANS_CHAMP_VIDE');
            $rdv["MOTIF_ANNULATION"] = $result["MOTIF_ANNULATION"];
			$rdv["DENOMINATION_ETABLISSEMENT_ATTACHE"] = $result["DENOMINATION_ETABLISSEMENT_ATTACHE"];
			$rdv["DENOMINATION_ORGANISATION_ATTACHE"] = $result["DENOMINATION_ORGANISATION_ATTACHE"];
			$rdv["TYPE_PRESTATION"] = $result["TYPE_PRESTATION"];
			if($result["REF_PRESTATION"]!="") {
				$rdv["PRESTATION"] = $result["REF_PRESTATION"];
				$rdv["PRESTATIONS_ASSOCIES"] = $result["TYPE_PRESTATION"]." - ".$result["REF_PRESTATION"];
			}
			else {
				$rdv["PRESTATION"] = $result["PRESTATION"];
				$rdv["PRESTATIONS_ASSOCIES"] = $result["TYPE_PRESTATION"]." - ".$result["PRESTATION"];
			}
			$rdv["DATE_DEB_RDV"] = $result["DATE_DEB_RDV"];
			$rdv["DATE_FIN_RDV"] = $result["DATE_FIN_RDV"];
			$rdv["TIME_DEB_RDV"] = $result["TIME_DEB_RDV"];
			$rdv["TIME_FIN_RDV"] = $result["TIME_FIN_RDV"];
			$rdv["CODE_RDV"] = $result["CODE_RDV"];
			$rdv["DATE_CREATION_FR"] = $result["DATE_CREATION_FR"];
			switch ($result["MODE_PRISE_RDV"]) {
				case Atexo_Config::getParameter('MODE_AGENT_INTERNET') : $rdv["MODE_PRISE_RDV"] = "globe";
				$rdv["MODE_PRISE_RDV_LIB"] = Prado::localize('WEB');
				$rdv["PROFIL_UTILISATEUR"] = Prado::localize('CITOYEN');
				break;
				case Atexo_Config::getParameter('MODE_AGENT_TELEOPERATEUR_TELEPHONE') : $rdv["MODE_PRISE_RDV"] = "phone";
				$rdv["MODE_PRISE_RDV_LIB"] = Prado::localize('PHONE');
				$rdv["NOM_ACCUEIL"] = $result["NOM_ACCUEIL"];
				$rdv["PRENOM_ACCUEIL"] = $result["PRENOM_ACCUEIL"];
				$rdv["PROFIL_UTILISATEUR"] = Prado::localize('OPERATEUR');
				break;
				case Atexo_Config::getParameter('MODE_AGENT_TELEOPERATEUR_SURPLACE') : $rdv["MODE_PRISE_RDV"] = "user";
				$rdv["MODE_PRISE_RDV_LIB"] = Prado::localize('SUR_PLACE');
				$rdv["NOM_ACCUEIL"] = $result["NOM_ACCUEIL"];
				$rdv["PRENOM_ACCUEIL"] = $result["PRENOM_ACCUEIL"];
				$rdv["PROFIL_UTILISATEUR"] = Prado::localize('OPERATEUR');
				break;
			}
			if($result["CHAMP_SUPP_PRESTA"]) {
				$data = json_decode($result["CHAMP_SUPP_PRESTA"],true);
				if(is_array($data) && is_array($data[$lang])) {
					$rdv["CHAMP_SUPP_PRESTA"] = $data[$lang];
				}
			}
			$rdv["NUMBER_PJ"] = $result["NUMBER_PJ"];
			if($criteriaVo->isGroupByDateJour()) {
				$listeRdv[$result["HEURE_RDV"]]["HEURE"]=$result["HEURE_RDV"];
				$listeRdv[$result["HEURE_RDV"]]["RDV"][]=$rdv;
			}
			elseif($criteriaVo->isGroupByDateSemaine()) {
				$listeRdv[$result["HEURE_RDV"]]["HEURE"]=$result["HEURE_RDV"];
				$listeRdv[$result["HEURE_RDV"]]["RDV"][]=$rdv;
			}
			elseif($criteriaVo->isGroupByDateMois()) {
				$listeRdv[$result["DATE_DEB_RDV"]]["JOUR_RDV"]=substr($result["DATE_DEB_RDV"],0,5);
				$listeRdv[$result["DATE_DEB_RDV"]]["RDV"][]=$rdv;
			}
			else {
				$listeRdv[]=$rdv;
			}
		}
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($listeRdv);
		return $listeRdv;
	}

	private function addCritere(Atexo_RendezVous_CriteriaVo $criteriaVo) {
		$sql = " ";
		$util = new Atexo_Utils_Util();
		if($criteriaVo->getNomCitoyen()!=null) {
			$sql .= " AND  (CI.NOM like '%".addslashes($criteriaVo->getNomCitoyen())."%' OR  CI.PRENOM like '%".addslashes($criteriaVo->getNomCitoyen())."%'".
                "OR  CI.RAISON_SOCIAL like '%".addslashes($criteriaVo->getNomCitoyen())."%'".
                "OR  CI.IDENTIFIANT like '%".addslashes($criteriaVo->getNomCitoyen())."%'".
                "OR  CI.TEXT_1 like '%".addslashes($criteriaVo->getNomCitoyen())."%'".
                "OR  CI.TEXT_2 like '%".addslashes($criteriaVo->getNomCitoyen())."%'".
                "OR  CI.TEXT_3 like '%".addslashes($criteriaVo->getNomCitoyen())."%'"
                .")";
		}
		if($criteriaVo->getCodeRdv()!=null) {
			$sql .= " AND RDV.CODE_RDV like '%".addslashes($criteriaVo->getCodeRdv())."%'";
		}
		if($criteriaVo->getIdAgent()) {
			$sql .= " AND AP.ID_PRESTATION=RDV.ID_PRESTATION AND AP.ID_AGENT='".$criteriaVo->getIdAgent()."'";
		}
		if($criteriaVo->isNonAnnule()) {
			$sql .= " AND RDV.ETAT_RDV NOT IN ('".Atexo_Config::getParameter("ETAT_ANNULE")."', '".Atexo_Config::getParameter("ETAT_ANNULE_ETAB")."')";
		}
		if($criteriaVo->getIdEtat()>-1) {
			$sql .= " AND RDV.ETAT_RDV='".$criteriaVo->getIdEtat()."'";
		}
		if($criteriaVo->getIdModePriseRdv()>-1) {
			$sql .= " AND RDV.MODE_PRISE_RDV='".$criteriaVo->getIdModePriseRdv()."'";
		}
		if($criteriaVo->getIdRessource()) {
			$sql .= " AND (RDV.ID_AGENT_RESSOURCE='".$criteriaVo->getIdRessource()."' OR RDV.ID_CHEF_RESSOURCE='".$criteriaVo->getIdRessource()."')";
		}
		if($criteriaVo->getIdPrestation()) {
			$sql .= " AND PR.ID_PRESTATION='".$criteriaVo->getIdPrestation()."'";
		}
		if($criteriaVo->getIdTypePrestation()) {
			$sql .= " AND PR.ID_TYPE_PRESTATION='".$criteriaVo->getIdTypePrestation()."'";
		}
		if($criteriaVo->getIdRefTypePrestation()) {
			$sql .= " AND TRTPR.ID_REF_TYPE_PRESTATION='".$criteriaVo->getIdRefTypePrestation()."'";
		}
		if($criteriaVo->getIdEntite()) {
			$entiteGestion = new Atexo_Entite_Gestion();
			$idsEntite = $entiteGestion->getAllIdChildEntite($criteriaVo->getIdEntite());
			$sql .= " AND ET.ID_ENTITE in (".implode(",",$idsEntite).")";
		}
		if($criteriaVo->getIdEtablissementAttache()) {
			$sql .= " AND TPR.ID_ETABLISSEMENT in (".$criteriaVo->getIdEtablissementAttache().") ";
		}
		if($criteriaVo->getIdOrganisationAttache()) {
			$sql .= " AND ET.ID_ORGANISATION='".$criteriaVo->getIdOrganisationAttache()."' ";
		}
		if($criteriaVo->getDateDu()) {
			$sql .= " AND RDV.DATE_RDV>='".$util->frnDate2iso($criteriaVo->getDateDu())." 00:00:00'";
		}
		if($criteriaVo->getDateAu()) {
			$sql .= " AND RDV.DATE_RDV<='".$util->frnDate2iso($criteriaVo->getDateAu())." 23:59:59'";
		}
		if($criteriaVo->getDateCreation()) {
			$sql .= " AND RDV.DATE_CREATION like ('".$util->frnDate2iso($criteriaVo->getDateCreation())."%') ";
		}

		return $sql;
	}

	public function getNbRdvByMode(Atexo_RendezVous_CriteriaVo $criteriaVo, $con=null) {
		$listeRdv = array();

		for($i=0;$i<=3;$i++) {
			$listeRdv[$i]["NBR"]="0";
			$listeRdv[$i]["LIBELLE"]=$this->getModePrise($i);
		}

		$sql = " SELECT COUNT(RDV.ID_RENDEZ_VOUS) AS NBR,MODE_PRISE_RDV FROM T_RENDEZ_VOUS RDV ";

		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=", T_ETABLISSEMENT TB";
		}
		$sql .= " WHERE 1=1 ";
		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=" AND TB.ID_ETABLISSEMENT=RDV.ID_ETABLISSEMENT ";
		}
		$sql .= self::addCritereNbRdv($criteriaVo);
		$sql .= " group by MODE_PRISE_RDV order by NBR ASC";
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null) {
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();
		$results = $stmt->fetchAll();
		foreach($results as $result)
		{
			$listeRdv[$result["MODE_PRISE_RDV"]]["NBR"]=$result["NBR"];
			$listeRdv[$result["MODE_PRISE_RDV"]]["LIBELLE"]=$this->getModePrise($result["MODE_PRISE_RDV"]);
		}
		$logger->debug($listeRdv);
		return $listeRdv;
	}

	public function getNbRdvByMois(Atexo_RendezVous_CriteriaVo $criteriaVo, $con=null) {
		$listeRdv = array();

		$sql = " SELECT COUNT(RDV.ID_RENDEZ_VOUS) AS NBR";

		if($criteriaVo->getDateDu()!="" || $criteriaVo->getDateAu()!="") {
			$sql .= ",DATE_FORMAT(RDV.DATE_RDV,'%Y-%m') AS DATE_RDV_GRP";
		}
		elseif($criteriaVo->getDateDuCreation()!="" || $criteriaVo->getDateAuCreation()!="") {
			$sql .= ",DATE_FORMAT(RDV.DATE_CREATION,'%Y-%m') AS DATE_RDV_GRP";
		}
		else {
			$sql .= ",DATE_FORMAT(RDV.DATE_RDV,'%Y-%m') AS DATE_RDV_GRP";
		}

		$sql .= ",MODE_PRISE_RDV FROM T_RENDEZ_VOUS RDV ";

		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=", T_ETABLISSEMENT TB";
		}
		$sql .= " WHERE 1=1 ";
		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=" AND TB.ID_ETABLISSEMENT=RDV.ID_ETABLISSEMENT ";
		}
		$sql .= self::addCritereNbRdv($criteriaVo);
		$sql .= " group by DATE_RDV_GRP,MODE_PRISE_RDV ORDER BY DATE_RDV_GRP";
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null) {
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();
		$results = $stmt->fetchAll();
		foreach($results as $result)
		{
			$date = explode("-",$result["DATE_RDV_GRP"]);
			$listeRdv[$result["DATE_RDV_GRP"]]["MODE"][$result["MODE_PRISE_RDV"]]["NBR"]=$result["NBR"];
			$listeRdv[$result["DATE_RDV_GRP"]]["LIBELLE"]=Prado::localize("MONTH".((int)$date[1]))." ".$date[0];
			$listeRdv[$result["DATE_RDV_GRP"]]["MODE"][$result["MODE_PRISE_RDV"]]["LIBELLE"]=$this->getModePrise($result["MODE_PRISE_RDV"]);
		}
		$logger->debug($listeRdv);
		return $listeRdv;
	}

	public function getNbRdvByAnnee(Atexo_RendezVous_CriteriaVo $criteriaVo, $con=null) {
		$listeRdv = array();

		$sql = " SELECT COUNT(RDV.ID_RENDEZ_VOUS) AS NBR";

		if($criteriaVo->getDateDu()!="" || $criteriaVo->getDateAu()!="") {
			$sql .= ",DATE_FORMAT(RDV.DATE_RDV,'%Y') AS DATE_RDV_GRP";
		}
		elseif($criteriaVo->getDateDuCreation()!="" || $criteriaVo->getDateAuCreation()!="") {
			$sql .= ",DATE_FORMAT(RDV.DATE_CREATION,'%Y') AS DATE_RDV_GRP";
		}
		else {
			$sql .= ",DATE_FORMAT(RDV.DATE_RDV,'%Y') AS DATE_RDV_GRP";
		}

		$sql .= ",MODE_PRISE_RDV FROM T_RENDEZ_VOUS RDV ";

		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=", T_ETABLISSEMENT TB";
		}
		$sql .= " WHERE 1=1 ";
		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=" AND TB.ID_ETABLISSEMENT=RDV.ID_ETABLISSEMENT ";
		}
		$sql .= self::addCritereNbRdv($criteriaVo);
		$sql .= " group by DATE_RDV_GRP,MODE_PRISE_RDV ORDER BY DATE_RDV_GRP";
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null) {
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();
		$results = $stmt->fetchAll();
		foreach($results as $result)
		{
			$listeRdv[$result["DATE_RDV_GRP"]]["MODE"][$result["MODE_PRISE_RDV"]]["NBR"]=$result["NBR"];
			$listeRdv[$result["DATE_RDV_GRP"]]["MODE"][$result["MODE_PRISE_RDV"]]["LIBELLE"]=$this->getModePrise($result["MODE_PRISE_RDV"]);
			$listeRdv[$result["DATE_RDV_GRP"]]["LIBELLE"]=$result["DATE_RDV_GRP"];
		}
		$logger->debug($listeRdv);
		return $listeRdv;
	}

	public function getNbRdvByEtab(Atexo_RendezVous_CriteriaVo $criteriaVo, $con=null) {
		$listeRdv = array();

		$sql = " SELECT COUNT(RDV.ID_RENDEZ_VOUS) AS NBR,TB.ID_ETABLISSEMENT,TL.LIBELLE,TL1.LIBELLE AS LIBELLE_ENTITE,MODE_PRISE_RDV FROM T_RENDEZ_VOUS RDV ";
		$sql .= " ,T_ETABLISSEMENT TB, T_TRADUCTION_LIBELLE TL,T_ENTITE E, T_TRADUCTION_LIBELLE TL1";
		$sql .= " WHERE RDV.ID_ETABLISSEMENT=TB.ID_ETABLISSEMENT AND E.ID_ENTITE=TB.ID_ENTITE";
		$sql .= " AND TB.CODE_DENOMINATION_ETABLISSEMENT=TL.ID_TRADUCTION AND E.CODE_LIBELLE=TL1.ID_TRADUCTION ";
		$sql .=	" AND TL.LANG='".$criteriaVo->getLang()."' AND TL1.LANG='".$criteriaVo->getLang()."' ";
		$sql .= self::addCritereNbRdv($criteriaVo);
		$sql .= " group by TB.ID_ETABLISSEMENT,MODE_PRISE_RDV order by NBR ASC";
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null) {
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();
		$results = $stmt->fetchAll();
		foreach($results as $result)
		{
			$listeRdv[$result["ID_ETABLISSEMENT"]]["LIBELLE"]=$result["LIBELLE_ENTITE"]." - ".$result["LIBELLE"];
			$listeRdv[$result["ID_ETABLISSEMENT"]]["MODE"][$result["MODE_PRISE_RDV"]]["NBR"]=$result["NBR"];
			$listeRdv[$result["ID_ETABLISSEMENT"]]["MODE"][$result["MODE_PRISE_RDV"]]["LIBELLE"]=$this->getModePrise($result["MODE_PRISE_RDV"]);
		}
		$logger->debug($listeRdv);
		return $listeRdv;
	}

	public function getNbRdvByEntite1(Atexo_RendezVous_CriteriaVo $criteriaVo, $con=null) {
		$listeRdv = array();

		$sql = " SELECT COUNT(RDV.ID_RENDEZ_VOUS) AS NBR,E1.ID_ENTITE,TL.LIBELLE,MODE_PRISE_RDV FROM T_RENDEZ_VOUS RDV ";
		$sql .= " ,T_ETABLISSEMENT TB, T_TRADUCTION_LIBELLE TL,T_ENTITE E1,T_ENTITE E2,T_ENTITE E3";
		$sql .= " WHERE RDV.ID_ETABLISSEMENT=TB.ID_ETABLISSEMENT AND E3.ID_ENTITE=TB.ID_ENTITE";
		$sql .= " AND E3.ID_ENTITE_PARENT=E2.ID_ENTITE AND E2.ID_ENTITE_PARENT=E1.ID_ENTITE AND E1.CODE_LIBELLE=TL.ID_TRADUCTION ";
		$sql .=	" AND TL.LANG='".$criteriaVo->getLang()."' ";
		$sql .= self::addCritereNbRdv($criteriaVo);
		$sql .= " group by E1.ID_ENTITE,MODE_PRISE_RDV order by NBR ASC";
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null) {
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();
		$results = $stmt->fetchAll();
		foreach($results as $result)
		{
			$listeRdv[$result["ID_ENTITE"]]["LIBELLE"]=$result["LIBELLE"];
			$listeRdv[$result["ID_ENTITE"]]["MODE"][$result["MODE_PRISE_RDV"]]["NBR"]=$result["NBR"];
			$listeRdv[$result["ID_ENTITE"]]["MODE"][$result["MODE_PRISE_RDV"]]["LIBELLE"]=$this->getModePrise($result["MODE_PRISE_RDV"]);
		}
		$logger->debug($listeRdv);
		return $listeRdv;
	}

	public function getNbRdvByRefTypePrestation(Atexo_RendezVous_CriteriaVo $criteriaVo, $con=null) {
		$listeRdv = array();

		$typePrestationGestion = new Atexo_TypePrestation_Gestion();
		$listeRefTypePresta = $typePrestationGestion->getRefTypePrestationByIdEtab($criteriaVo->getLang(),$this->listeEtablissement->SelectedValue);
		foreach($listeRefTypePresta as $id=>$libTypePresta)
		{
			$listeRdv[$id]["NBR"]="0";
			$listeRdv[$id]["LIBELLE"]=$libTypePresta;
		}

		$sql = " SELECT COUNT(RDV.ID_RENDEZ_VOUS) AS NBR,RTP.ID_REF_TYPE_PRESTATION,LIBELLE FROM T_RENDEZ_VOUS RDV ";
		$sql .= " ,T_PRESTATION P, T_TYPE_PRESTATION TP, T_REF_TYPE_PRESTATION RTP, T_TRADUCTION_LIBELLE TL";
		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=", T_ETABLISSEMENT TB";
		}
		$sql .= " WHERE RDV.ID_PRESTATION=P.ID_PRESTATION AND TP.ID_TYPE_PRESTATION=P.ID_TYPE_PRESTATION ";
		$sql .= " AND TP.ID_REF_TYPE_PRESTATION=RTP.ID_REF_TYPE_PRESTATION AND RTP.CODE_LIBELLE=TL.ID_TRADUCTION ";
		$sql .=	" AND TL.LANG='".$criteriaVo->getLang()."' ";
		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=" AND TB.ID_ETABLISSEMENT=RDV.ID_ETABLISSEMENT ";
		}
		$sql .= self::addCritereNbRdv($criteriaVo);
		$sql .= " group by RTP.ID_REF_TYPE_PRESTATION order by NBR ASC";
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null) {
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();
		$results = $stmt->fetchAll();
		foreach($results as $result)
		{
			$listeRdv[$result["ID_REF_TYPE_PRESTATION"]]["NBR"]=$result["NBR"];
			$listeRdv[$result["ID_REF_TYPE_PRESTATION"]]["LIBELLE"]=$result["LIBELLE"];
		}
		$logger->debug($listeRdv);
		return $listeRdv;
	}

	public function getNbRdvByRefPrestation(Atexo_RendezVous_CriteriaVo $criteriaVo, $con=null) {
		$listeRdv = array();

		$sql = " SELECT COUNT(RDV.ID_RENDEZ_VOUS) AS NBR,RP.ID_REF_PRESTATION,LIBELLE FROM T_RENDEZ_VOUS RDV ";
		$sql .= " ,T_PRESTATION P, T_REF_PRESTATION RP, T_TRADUCTION_LIBELLE TL";
		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=", T_ETABLISSEMENT TB";
		}
		$sql .= " WHERE RDV.ID_PRESTATION=P.ID_PRESTATION ";
		$sql .= " AND P.ID_REF_PRESTATION=RP.ID_REF_PRESTATION AND RP.CODE_LIBELLE=TL.ID_TRADUCTION ";
		$sql .=	" AND TL.LANG='".$criteriaVo->getLang()."' ";
		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=" AND TB.ID_ETABLISSEMENT=RDV.ID_ETABLISSEMENT ";
		}
		$sql .= self::addCritereNbRdv($criteriaVo);
		$sql .= " group by RP.ID_REF_PRESTATION order by NBR ASC";
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null) {
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();
		$results = $stmt->fetchAll();
		foreach($results as $result)
		{
			$listeRdv[$result["ID_REF_PRESTATION"]]["NBR"]=$result["NBR"];
			$listeRdv[$result["ID_REF_PRESTATION"]]["LIBELLE"]=$result["LIBELLE"];
		}
		$logger->debug($listeRdv);
		return $listeRdv;
	}

	/* Par Etat */

	public function getNbRdvByEtatAndMode(Atexo_RendezVous_CriteriaVo $criteriaVo, $con=null) {
		$listeRdv = array();

		$sql = " SELECT COUNT(RDV.ID_RENDEZ_VOUS) AS NBR, ETAT_RDV, MODE_PRISE_RDV FROM T_RENDEZ_VOUS RDV ";

		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=", T_ETABLISSEMENT TB";
		}
		$sql .= " WHERE DATE_RDV<'".date('Y-m-d')." 00:00:00'";
		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=" AND TB.ID_ETABLISSEMENT=RDV.ID_ETABLISSEMENT ";
		}
		$sql .= self::addCritereNbRdv($criteriaVo);
		$sql .= " group by ETAT_RDV, MODE_PRISE_RDV order by NBR ASC";
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null) {
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();
		$results = $stmt->fetchAll();
		foreach($results as $result)
		{
			$listeRdv[$result["MODE_PRISE_RDV"]]["MODE"][$result["ETAT_RDV"]]["NBR"]=$result["NBR"];
			$listeRdv[$result["MODE_PRISE_RDV"]]["MODE"][$result["ETAT_RDV"]]["LIBELLE"]=$this->getEtatRdv($result["ETAT_RDV"]);
			$listeRdv[$result["MODE_PRISE_RDV"]]["LIBELLE"]=$this->getModePrise($result["MODE_PRISE_RDV"]);
		}
		$logger->debug($listeRdv);
		return $listeRdv;
	}

	public function getNbRdvByEtatAndMois(Atexo_RendezVous_CriteriaVo $criteriaVo, $con=null) {
		$listeRdv = array();

		$sql = " SELECT COUNT(RDV.ID_RENDEZ_VOUS) AS NBR";

		if($criteriaVo->getDateDu()!="" || $criteriaVo->getDateAu()!="") {
			$sql .= ",DATE_FORMAT(RDV.DATE_RDV,'%Y-%m') AS DATE_RDV_GRP";
		}
		elseif($criteriaVo->getDateDuCreation()!="" || $criteriaVo->getDateAuCreation()!="") {
			$sql .= ",DATE_FORMAT(RDV.DATE_CREATION,'%Y-%m') AS DATE_RDV_GRP";
		}
		else {
			$sql .= ",DATE_FORMAT(RDV.DATE_RDV,'%Y-%m') AS DATE_RDV_GRP";
		}

		$sql .= ", ETAT_RDV FROM T_RENDEZ_VOUS RDV ";

		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=", T_ETABLISSEMENT TB";
		}
		$sql .= " WHERE DATE_RDV<'".date('Y-m-d')." 00:00:00'";
		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=" AND TB.ID_ETABLISSEMENT=RDV.ID_ETABLISSEMENT ";
		}
		$sql .= self::addCritereNbRdv($criteriaVo);
		$sql .= " group by DATE_RDV_GRP,ETAT_RDV ORDER BY DATE_RDV_GRP";
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null) {
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();
		$results = $stmt->fetchAll();
		foreach($results as $result)
		{
			$date = explode("-",$result["DATE_RDV_GRP"]);
			$listeRdv[$result["DATE_RDV_GRP"]]["MODE"][$result["ETAT_RDV"]]["NBR"]=$result["NBR"];
			$listeRdv[$result["DATE_RDV_GRP"]]["LIBELLE"]=Prado::localize("MONTH".((int)$date[1]))." ".$date[0];
			$listeRdv[$result["DATE_RDV_GRP"]]["MODE"][$result["ETAT_RDV"]]["LIBELLE"]=$this->getEtatRdv($result["ETAT_RDV"]);
		}
		$logger->debug($listeRdv);
		return $listeRdv;
	}

	public function getNbRdvByEtatAndAnnee(Atexo_RendezVous_CriteriaVo $criteriaVo, $con=null) {
		$listeRdv = array();

		$sql = " SELECT COUNT(RDV.ID_RENDEZ_VOUS) AS NBR";

		if($criteriaVo->getDateDu()!="" || $criteriaVo->getDateAu()!="") {
			$sql .= ",DATE_FORMAT(RDV.DATE_RDV,'%Y') AS DATE_RDV_GRP";
		}
		elseif($criteriaVo->getDateDuCreation()!="" || $criteriaVo->getDateAuCreation()!="") {
			$sql .= ",DATE_FORMAT(RDV.DATE_CREATION,'%Y') AS DATE_RDV_GRP";
		}
		else {
			$sql .= ",DATE_FORMAT(RDV.DATE_RDV,'%Y') AS DATE_RDV_GRP";
		}

		$sql .= ",ETAT_RDV FROM T_RENDEZ_VOUS RDV ";

		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=", T_ETABLISSEMENT TB";
		}
		$sql .= " WHERE DATE_RDV<'".date('Y-m-d')." 00:00:00'";
		if($criteriaVo->getIdEntite()>0 || $criteriaVo->getIdOrganisationAttache()) {
			$sql .=" AND TB.ID_ETABLISSEMENT=RDV.ID_ETABLISSEMENT ";
		}
		$sql .= self::addCritereNbRdv($criteriaVo);
		$sql .= " group by DATE_RDV_GRP,ETAT_RDV ORDER BY DATE_RDV_GRP";
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null) {
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();
		$results = $stmt->fetchAll();
		foreach($results as $result)
		{
			$listeRdv[$result["DATE_RDV_GRP"]]["MODE"][$result["ETAT_RDV"]]["NBR"]=$result["NBR"];
			$listeRdv[$result["DATE_RDV_GRP"]]["MODE"][$result["ETAT_RDV"]]["LIBELLE"]=$this->getEtatRdv($result["ETAT_RDV"]);
			$listeRdv[$result["DATE_RDV_GRP"]]["LIBELLE"]=$result["DATE_RDV_GRP"];
		}
		$logger->debug($listeRdv);
		return $listeRdv;
	}

	public function getNbRdvByEtatAndEtab(Atexo_RendezVous_CriteriaVo $criteriaVo, $con=null) {
		$listeRdv = array();

		$sql = " SELECT COUNT(RDV.ID_RENDEZ_VOUS) AS NBR,TB.ID_ETABLISSEMENT,TL.LIBELLE,TL1.LIBELLE AS LIBELLE_ENTITE,ETAT_RDV FROM T_RENDEZ_VOUS RDV ";
		$sql .= " ,T_ETABLISSEMENT TB, T_TRADUCTION_LIBELLE TL,T_ENTITE E, T_TRADUCTION_LIBELLE TL1";
		$sql .= " WHERE RDV.ID_ETABLISSEMENT=TB.ID_ETABLISSEMENT AND E.ID_ENTITE=TB.ID_ENTITE";
		$sql .= " AND TB.CODE_DENOMINATION_ETABLISSEMENT=TL.ID_TRADUCTION AND E.CODE_LIBELLE=TL1.ID_TRADUCTION ";
		$sql .=	" AND TL.LANG='".$criteriaVo->getLang()."' AND TL1.LANG='".$criteriaVo->getLang()."' ";
		$sql .= " AND DATE_RDV<'".date('Y-m-d')." 00:00:00' ";
		$sql .= self::addCritereNbRdv($criteriaVo);
		$sql .= " group by TB.ID_ETABLISSEMENT,ETAT_RDV order by NBR ASC";
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null) {
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();
		$results = $stmt->fetchAll();
		foreach($results as $result)
		{
			$listeRdv[$result["ID_ETABLISSEMENT"]]["LIBELLE"]=$result["LIBELLE_ENTITE"]." - ".$result["LIBELLE"];
			$listeRdv[$result["ID_ETABLISSEMENT"]]["MODE"][$result["ETAT_RDV"]]["NBR"]=$result["NBR"];
			$listeRdv[$result["ID_ETABLISSEMENT"]]["MODE"][$result["ETAT_RDV"]]["LIBELLE"]=$this->getEtatRdv($result["ETAT_RDV"]);
		}
		$logger->debug($listeRdv);
		return $listeRdv;
	}

	public function getNbRdvByEtatAndEntite1(Atexo_RendezVous_CriteriaVo $criteriaVo, $con=null) {
		$listeRdv = array();

		$sql = " SELECT COUNT(RDV.ID_RENDEZ_VOUS) AS NBR,E1.ID_ENTITE,TL.LIBELLE,ETAT_RDV FROM T_RENDEZ_VOUS RDV ";
		$sql .= " ,T_ETABLISSEMENT TB, T_TRADUCTION_LIBELLE TL,T_ENTITE E1,T_ENTITE E2,T_ENTITE E3";
		$sql .= " WHERE RDV.ID_ETABLISSEMENT=TB.ID_ETABLISSEMENT AND E3.ID_ENTITE=TB.ID_ENTITE";
		$sql .= " AND E3.ID_ENTITE_PARENT=E2.ID_ENTITE AND E2.ID_ENTITE_PARENT=E1.ID_ENTITE AND E1.CODE_LIBELLE=TL.ID_TRADUCTION ";
		$sql .=	" AND TL.LANG='".$criteriaVo->getLang()."' ";
		$sql .= " AND DATE_RDV<'".date('Y-m-d')." 00:00:00' ";
		$sql .= self::addCritereNbRdv($criteriaVo);
		$sql .= " group by E1.ID_ENTITE,ETAT_RDV order by NBR ASC";
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null) {
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();
		$results = $stmt->fetchAll();
		foreach($results as $result)
		{
			$listeRdv[$result["ID_ENTITE"]]["LIBELLE"]=$result["LIBELLE"];
			$listeRdv[$result["ID_ENTITE"]]["MODE"][$result["ETAT_RDV"]]["NBR"]=$result["NBR"];
			$listeRdv[$result["ID_ENTITE"]]["MODE"][$result["ETAT_RDV"]]["LIBELLE"]=$this->getEtatRdv($result["ETAT_RDV"]);
		}
		$logger->debug($listeRdv);
		return $listeRdv;
	}

	public function getNbRdvByCriteres(Atexo_RendezVous_CriteriaVo $criteriaVo, $con=null) {
		$listeRdv = array();
		
		$sql = " SELECT RDV.ID_RENDEZ_VOUS, ETAT_RDV, DATE_FORMAT(RDV.DATE_CREATION,'%Y-%m-%d') AS DATE_CREATION,DATE_FORMAT(RDV.DATE_RDV,'%Y-%m-%d') AS DATE_RDV,".
			   " MODE_PRISE_RDV, ID_AGENT_ANNULATION ".
               " FROM T_RENDEZ_VOUS RDV, T_PRESTATION PR".
			   " LEFT JOIN T_REF_PRESTATION ON (T_REF_PRESTATION.ID_REF_PRESTATION=PR.ID_REF_PRESTATION),T_ETABLISSEMENT TB ";

		$sql .= " WHERE PR.ID_PRESTATION=RDV.ID_PRESTATION AND TB.ID_ETABLISSEMENT=RDV.ID_ETABLISSEMENT ";
		$sql .= self::addCritereNbRdv($criteriaVo);
		$sql .= " order by RDV.DATE_RDV ASC";
		$logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
		$logger->debug($sql);
		if($con === null) {
			$con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
		}
		$stmt = $con->prepare($sql);
		$stmt->setFetchMode(PDO::FETCH_ASSOC);
		$stmt->execute();
		$results = $stmt->fetchAll();
		foreach($results as $result)
		{
			$listeRdv[$result["DATE_RDV"]]["total"]++;
			$listeRdv[$result["DATE_RDV"]][$result["MODE_PRISE_RDV"]]++;
			if($result["ETAT_RDV"]==Atexo_Config::getParameter("ETAT_EN_ATTENTE")) {
				$listeRdv[$result["DATE_RDV"]]["en_attente"]++;
			}
			elseif($result["ETAT_RDV"]==Atexo_Config::getParameter("ETAT_CONFIRME")) {
				$listeRdv[$result["DATE_RDV"]]["confirme"]++;
			}
			elseif( $result["ETAT_RDV"] == Atexo_Config::getParameter("ETAT_ANNULE_ETAB") ) {
				$listeRdv[$result["DATE_RDV"]]["annule_agent"]++;
			}
			elseif( $result["ETAT_RDV"] == Atexo_Config::getParameter("ETAT_ANNULE") ) {
				$listeRdv[$result["DATE_RDV"]]["annule_citoyen"]++;
			}
			elseif($result["ETAT_RDV"]==Atexo_Config::getParameter("ETAT_NON_HONORE")) {
				$listeRdv[$result["DATE_RDV"]]["non_honore"]++;
			}
		}
		$logger->debug($listeRdv);
		return $listeRdv;
	}
	
	/**
	 * @param $criteriaVo
	 * Ajouter les criteres
	 */
	private function addCritereNbRdv($criteriaVo) {
		$sql = "";
		$util = new Atexo_Utils_Util();
		if($criteriaVo->getIdEntite()) {
			$entiteGestion = new Atexo_Entite_Gestion();
			$idsEntite = $entiteGestion->getAllIdChildEntite($criteriaVo->getIdEntite());
			$sql .= " AND TB.ID_ENTITE in (".implode(",",$idsEntite).")";
		}
		if($criteriaVo->getIdPrestation()) {
			$sql .= " AND PR.ID_PRESTATION='".$criteriaVo->getIdPrestation()."'";
		}
		if($criteriaVo->getIdRefPrestation()) {
			$sql .= " AND T_REF_PRESTATION.ID_REF_PRESTATION='".$criteriaVo->getIdRefPrestation()."'";
		}
		if($criteriaVo->getIdTypePrestation()) {
			$sql .= " AND PR.ID_TYPE_PRESTATION='".$criteriaVo->getIdTypePrestation()."'";
		}
		if($criteriaVo->getIdEtablissementAttache()) {
			$sql .= " AND RDV.ID_ETABLISSEMENT in (".$criteriaVo->getIdEtablissementAttache().") ";
		}
		if($criteriaVo->getIdOrganisationAttache()) {
			$sql .= " AND TB.ID_ORGANISATION = '".$criteriaVo->getIdOrganisationAttache()."' ";
		}
		if($criteriaVo->getDateDu()) {
			$sql .= " AND RDV.DATE_RDV>='".$util->frnDate2iso($criteriaVo->getDateDu())."' ";
		}
		if($criteriaVo->getDateAu()) {
			$sql .= " AND RDV.DATE_RDV<='".$util->frnDate2iso($criteriaVo->getDateAu())." 23:59:59' ";
		}
		if($criteriaVo->getDateDuCreation()) {
			$sql .= " AND RDV.DATE_CREATION>='".$util->frnDate2iso($criteriaVo->getDateDuCreation())."' ";
		}
		if($criteriaVo->getDateAuCreation()) {
			$sql .= " AND RDV.DATE_CREATION<='".$util->frnDate2iso($criteriaVo->getDateAuCreation())." 23:59:59' ";
		}
		return $sql;
	}

	private function getEtatRdv($etatRdv) {
		switch ($etatRdv) {
			case Atexo_Config::getParameter('ETAT_EN_ATTENTE') : return Prado::localize('EN_ATTENTE');
			case Atexo_Config::getParameter('ETAT_CONFIRME') : return Prado::localize('CONFIRME');
			case Atexo_Config::getParameter('ETAT_NON_HONORE') : return Prado::localize('NON_HONORE_CITOYEN');
			case Atexo_Config::getParameter('ETAT_ANNULE') : return Prado::localize('ANNULE_CITOYEN');
			case Atexo_Config::getParameter('ETAT_NON_HONORE_ETAB') : return Prado::localize('NON_HONORE_ETAB');
			case Atexo_Config::getParameter('ETAT_ANNULE_ETAB') : return Prado::localize('ANNULE_ETAB');
		}
	}

	private function getAnnulePar($data) {

		if( $data["ETAT_RDV"] == Atexo_Config::getParameter("ETAT_ANNULE_ETAB") ) {
			return Prado::localize ( 'ANNULE_PAR_ADMINISTRATEUR' ) . ' ' . $data['NOM_AGENT_ANNULATION'] . ' ' . $data['PRENOM_AGENT_ANNULATION'];
		}
		elseif( $data["ETAT_RDV"] == Atexo_Config::getParameter("ETAT_ANNULE") ) {
			return Prado::localize ( 'ANNULE_PAR_CITOYEN' );
		}
		elseif($data["ETAT_RDV"]==Atexo_Config::getParameter("ETAT_NON_HONORE")) {
			return Prado::localize ( 'ANNULE_PAR_ADMINISTRATEUR' ) . ' ' . $data['NOM_AGENT_ANNULATION'] . ' ' . $data['PRENOM_AGENT_ANNULATION'];
		}
		elseif($data["ETAT_RDV"]==Atexo_Config::getParameter("ETAT_NON_HONORE_ETAB")) {
			return Prado::localize ( 'ANNULE_PAR_ADMINISTRATEUR' ) . ' ' . $data['NOM_AGENT_ANNULATION'] . ' ' . $data['PRENOM_AGENT_ANNULATION'];
		}
		else{
			return Prado::localize('TRANS_CHAMP_VIDE');
		}
	}

	private function getModePrise($mode) {
		switch ($mode) {
			case Atexo_Config::getParameter('MODE_AGENT_INTERNET') :return Prado::localize('WEB');
			case Atexo_Config::getParameter('MODE_AGENT_TELEOPERATEUR_TELEPHONE') : return Prado::localize('PHONE');
			case Atexo_Config::getParameter('MODE_AGENT_TELEOPERATEUR_SURPLACE') : return Prado::localize('SUR_PLACE');
			case Atexo_Config::getParameter('TYPE_APPLI_MOBILE') : return Prado::localize('APPLICATION_MOBILE');
		}

	}

	public function isVisioToStart($code, $con=null) {

                $sql = " SELECT ETAT_RDV,DATE_RDV,DATE_FIN_RDV FROM T_RENDEZ_VOUS RDV ";
                $sql .= " WHERE SHA2(CODE_RDV,256)='".$code."' AND NOW()>=(DATE_RDV - INTERVAL 20 MINUTE) AND NOW()<=(DATE_FIN_RDV + INTERVAL 20 MINUTE)";
		$sql .= " AND ETAT_RDV in ('".Atexo_Config::getParameter('ETAT_EN_ATTENTE')."','".Atexo_Config::getParameter('ETAT_CONFIRME')."')";
                $logger = Atexo_LoggerManager::getLogger("rdvLogInfo");
                $logger->debug($sql);
                if($con === null) {
                        $con = Propel::getConnection(Atexo_Config::getParameter("DB_NAME").Atexo_Config::getParameter("CONST_READ_ONLY"));
                }
                $stmt = $con->prepare($sql);
                $stmt->setFetchMode(PDO::FETCH_ASSOC);
                $stmt->execute();
                $results = $stmt->fetchAll();
                foreach($results as $result)
                {
			return 1;
                }
                $logger->debug($listeRdv);
                return 0;
        }

}
